.volume: &x-volume-name "mysql"

volumes:
  mysql:
    name: *x-volume-name
    annotations:
      argocd.argoproj.io/sync-wave: "-1"
    nfs:
      path: <path:secrets/data/k8s/nfs/secrets#path>
      server: <path:secrets/data/k8s/nfs/secrets#server>

mysql:
  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.23-debian-10-r57
    debug: true

  architecture: standalone

  auth:
    rootPassword: <path:secrets/data/k8s/mysql/secrets#root>

  primary:
    configuration: |-
      [mysqld]
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64

    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false

    persistence:
      enabled: true
      existingClaim: *x-volume-name
      storageClass: "nfs"

  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
      pullPolicy: Always
    resources: {}
